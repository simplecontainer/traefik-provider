name: Release proxy-manager

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [ '1.22.x' ]
        platform: [ 'amd64', 'arm64' ]
        os: [ 'linux' ]
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.BOT_USER_PAT }}
          show-progress: false
      - name: Setup Go ${{ matrix.go-version }}
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
      - name: Display Go version
        run: go version
      - name: Build traefik-provider
        run: |
          VERSION=$(cat version)
          CGO_ENABLED=0 GOOS=${{ matrix.os }} GOARCH=${{ matrix.platform }} go build -ldflags "-s -w -X main.version=$VERSION" -o traefik-provider-${{ matrix.os }}-${{ matrix.platform }}
          chmod +x traefik-provider-${{ matrix.os }}-${{ matrix.platform }}
      - name: Upload traefik-provider artifacts
        uses: actions/upload-artifact@v4
        with:
          name: traefik-provider-${{ matrix.os}}-${{ matrix.platform }}
          path: traefik-provider-${{ matrix.os }}-${{ matrix.platform }}

  release:
    runs-on: ubuntu-latest
    needs: [ build ]
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.BOT_USER_PAT }}
          show-progress: false
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts
      - name: Create release assets
        run: |
          mkdir -p release
          
          VERSION=$(cat version)
          
          find artifacts -type f -exec cp {} release/ \;
      - uses: ncipollo/release-action@v1
        with:
          artifacts: "release/*"
          body: 'Automatically created - fill in accordingly'
          allowUpdates: true
          draft: false
          tag: ${{ github.ref_name }}

  release-docker:
    runs-on: ubuntu-latest
    needs: [ release ]
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.BOT_USER_PAT }}
          show-progress: false

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Download traefik-provider amd64
        uses: actions/download-artifact@v4
        with:
          name: traefik-provider-linux-amd64
          path: ./traefik-provider-linux-amd64/

      - name: Download traefik-provider arm64
        uses: actions/download-artifact@v4
        with:
          name: traefik-provider-linux-arm64
          path: ./traefik-provider-linux-arm64/

      - name: Prepare binaries
        run: |
          chmod +x ./traefik-provider-linux-amd64/traefik-provider-linux-amd64
          chmod +x ./traefik-provider-linux-arm64/traefik-provider-linux-arm64
          
          mv ./traefik-provider-linux-amd64/traefik-provider-linux-amd64 ./traefik-provider-linux-amd64/traefik-provider
          mv ./traefik-provider-linux-arm64/traefik-provider-linux-arm64 ./traefik-provider-linux-arm64/traefik-provider

      - name: Extract version tag
        id: extract_tag
        run: |
          VERSION=$(echo "${{ github.ref_name }}" | cut -d'-' -f2)
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Login to Docker Registry
        uses: docker/login-action@v3
        with:
          registry: "quay.io"
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}

      - name: Prepare Docker tags
        id: docker_meta
        uses: docker/metadata-action@v5
        with:
          images: 'quay.io/simplecontainer/traefik-provider'
          tags: |
            type=raw,value=latest,enable=true
            type=raw,value=${{ steps.extract_tag.outputs.version }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: docker/Dockerfile
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.docker_meta.outputs.tags }}
          push: true